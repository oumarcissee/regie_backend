# Generated by Django 4.2.5 on 2023-12-15 04:04

import app.utils.utils
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Area",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "custom_id",
                    app.utils.utils.CustomPrimaryKeyField(
                        max_length=10, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "custom_id",
                    app.utils.utils.CustomPrimaryKeyField(
                        max_length=10, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("image", models.ImageField(upload_to="Articles/%Y/")),
                (
                    "price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                (
                    "rate_per_person",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("unite", models.CharField(max_length=100)),
                ("divider", models.IntegerField(default=0)),
                ("description", models.TextField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Menu",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "custom_id",
                    app.utils.utils.CustomPrimaryKeyField(
                        max_length=10, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[("food", "Food"), ("other", "Other")],
                        default="food",
                        max_length=10,
                    ),
                ),
                ("description", models.TextField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Provider",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "custom_id",
                    app.utils.utils.CustomPrimaryKeyField(
                        max_length=10, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("phone_number", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=100, null=True)),
                ("address", models.CharField(max_length=200)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("unit", "Unit"),
                            ("school", "School"),
                            ("mission", "Mission"),
                            ("service", "Service"),
                            ("single", "Single"),
                        ],
                        default="unit",
                        max_length=20,
                    ),
                ),
                ("chief", models.CharField(max_length=255)),
                ("effective", models.IntegerField(default=0)),
                ("duration", models.IntegerField(default=0)),
                ("description", models.TextField()),
                (
                    "area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="area_unit",
                        to="app.area",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "custom_id",
                    app.utils.utils.CustomPrimaryKeyField(
                        max_length=10, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "store_type",
                    models.CharField(
                        choices=[("store_a", "Store_a"), ("store_b", "Store_b")],
                        default="store_a",
                        max_length=10,
                    ),
                ),
                ("quantity", models.IntegerField(default=0)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="item_order",
                        to="app.item",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="provider_order",
                        to="app.provider",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="itemStock",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "custom_id",
                    app.utils.utils.CustomPrimaryKeyField(
                        max_length=10, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("quantity", models.IntegerField(default=0)),
                (
                    "store_type",
                    models.CharField(
                        choices=[("store_a", "Store_a"), ("store_b", "Store_b")],
                        default="store_a",
                        max_length=10,
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="app.item",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="providers",
                        to="app.provider",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Discharge",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "custom_id",
                    app.utils.utils.CustomPrimaryKeyField(
                        max_length=10, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("slip", "Slip"), ("cert", "Cert")],
                        default="slip",
                        max_length=10,
                    ),
                ),
                ("discharged", models.BooleanField(default=False)),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="Decharges/%Y/"),
                ),
                (
                    "Menu",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="menus",
                        to="app.menu",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items_disch",
                        to="app.item",
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="units",
                        to="app.unit",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("matricule", models.CharField(max_length=50, unique=True)),
                ("phone_number", models.CharField(max_length=100, unique=True)),
                ("email", models.EmailField(max_length=150, unique=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("empty", "Empty"),
                            ("admin", "Admin"),
                            ("manager_a", "Manager_a"),
                            ("manager_b", "Manager_b"),
                            ("kepper_a", "Kepper_a"),
                            ("kepper_b", "Kepper_b"),
                        ],
                        default="empty",
                        max_length=20,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
